/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 * @author Trinh Nguyen
 * Holds two panel, the side panel shows current game information and option
 * to create a new game. The center panel display the board to the player
 */
public class MainGameGUI extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;

	public MainGameGUI(int column, int row, int sequence, PlayerType red, PlayerType yellow) {
		_boardData = new BoardData(column, row, sequence, red, yellow);
		_boardPanel = new BoardGUI(_boardData, this);
		initComponents();
		setGeneralData();
		updateStatus();
		_boardData.getRedPlayer().startPlaying();
		_boardData.getYellowPlayer().startPlaying();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		newGameWindow = new javax.swing.JDialog();
		newGameWindowRedPlayerLabel = new javax.swing.JLabel();
		newGameWindowRedPlayerCombo = new javax.swing.JComboBox<>();
		newGameWindowYellowPlayerLabel = new javax.swing.JLabel();
		newGameWindowYellowPlayerCombo = new javax.swing.JComboBox<>();
		newGameWindowBoardSizeLabel = new javax.swing.JLabel();
		newGameWindowSequenceLabel = new javax.swing.JLabel();
		newGameWindowCancelButton = new javax.swing.JButton();
		newGameWindowConfirmCombo = new javax.swing.JButton();
		newGameWindowBoardSizeCombo = new javax.swing.JSpinner();
		newGameWindowSequenceCombo = new javax.swing.JSpinner();
		leftPanel = new javax.swing.JPanel();
		newGameButton = new javax.swing.JButton();
		boardSizeTitleLabel = new javax.swing.JLabel();
		boardSizeLabel = new javax.swing.JLabel();
		sequenceTitleLabel = new javax.swing.JLabel();
		sequenceLabel = new javax.swing.JLabel();
		redPlayerTitle = new javax.swing.JLabel();
		yellowPlayerTitle = new javax.swing.JLabel();
		statusTitleLabel = new javax.swing.JLabel();
		statusUpdateLabel = new javax.swing.JLabel();
		movesLabel = new javax.swing.JLabel();
		exitGameButton = new javax.swing.JButton();
		filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(140, 0), new java.awt.Dimension(140, 0), new java.awt.Dimension(140, 32767));
		redPlayerTypeLabel = new javax.swing.JLabel();
		yellowPlayerTypeLabel = new javax.swing.JLabel();
		undoButton = new javax.swing.JButton();

		newGameWindow.setAlwaysOnTop(true);
		newGameWindow.setModal(true);
		newGameWindow.setResizable(false);

		newGameWindowRedPlayerLabel.setText("Red Player:");

		newGameWindowRedPlayerCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Human", "Computer" }));

		newGameWindowYellowPlayerLabel.setText("Yellow Player:");

		newGameWindowYellowPlayerCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Human", "Computer"}));

		newGameWindowBoardSizeLabel.setText("Board Size:");

		newGameWindowSequenceLabel.setText("Sequence:");

		newGameWindowCancelButton.setText("Cancel");
		newGameWindowCancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				newGameWindowCancelButtonActionPerformed(evt);
			}
		});

		newGameWindowConfirmCombo.setText("Confirm");
		newGameWindowConfirmCombo.setSelected(true);
		newGameWindowConfirmCombo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				newGameWindowConfirmComboActionPerformed(evt);
			}
		});

		newGameWindowBoardSizeCombo.setModel(new javax.swing.SpinnerNumberModel(7, 2, 50, 1));

		newGameWindowSequenceCombo.setModel(new javax.swing.SpinnerNumberModel(4, 2, 50, 1));

		newGameWindow.addWindowListener(new WindowAdapter() 
		{
			public void windowClosed(WindowEvent e)
			{

			}

			public void windowClosing(WindowEvent e)
			{
				_boardData.unpause();
			}
		});

		javax.swing.GroupLayout newGameWindowLayout = new javax.swing.GroupLayout(newGameWindow.getContentPane());
		newGameWindow.getContentPane().setLayout(newGameWindowLayout);
		newGameWindowLayout.setHorizontalGroup(
				newGameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(newGameWindowLayout.createSequentialGroup()
						.addContainerGap()
						.addGroup(newGameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(newGameWindowLayout.createSequentialGroup()
										.addComponent(newGameWindowRedPlayerLabel)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(newGameWindowRedPlayerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(newGameWindowLayout.createSequentialGroup()
										.addComponent(newGameWindowYellowPlayerLabel)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(newGameWindowYellowPlayerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(newGameWindowLayout.createSequentialGroup()
										.addComponent(newGameWindowSequenceLabel)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(newGameWindowSequenceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(newGameWindowLayout.createSequentialGroup()
										.addComponent(newGameWindowCancelButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(newGameWindowConfirmCombo))
								.addGroup(newGameWindowLayout.createSequentialGroup()
										.addComponent(newGameWindowBoardSizeLabel)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(newGameWindowBoardSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);
		newGameWindowLayout.setVerticalGroup(
				newGameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(newGameWindowLayout.createSequentialGroup()
						.addContainerGap()
						.addGroup(newGameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(newGameWindowRedPlayerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(newGameWindowRedPlayerLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(newGameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(newGameWindowYellowPlayerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(newGameWindowYellowPlayerLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(newGameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(newGameWindowBoardSizeLabel)
								.addComponent(newGameWindowBoardSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(newGameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(newGameWindowSequenceLabel)
								.addComponent(newGameWindowSequenceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(newGameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(newGameWindowCancelButton)
								.addComponent(newGameWindowConfirmCombo))
						.addContainerGap(8, Short.MAX_VALUE))
				);

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Trinh's Connect 4 Game");

		newGameButton.setText("New Game");
		newGameButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				newGameButtonActionPerformed(evt);
			}
		});

		boardSizeTitleLabel.setText("Board Size:");

		boardSizeLabel.setText("6 X 6");

		sequenceTitleLabel.setText("Sequence to Win:");

		sequenceLabel.setText("4");

		redPlayerTitle.setText("Red Player:");

		yellowPlayerTitle.setText("Yellow Player:");

		statusTitleLabel.setText("Status:");

		statusUpdateLabel.setText("Draw game!");

		movesLabel.setText("Moves: 0");

		exitGameButton.setText("Exit");
		exitGameButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitGameButtonActionPerformed(evt);
			}
		});

		redPlayerTypeLabel.setText("Human");

		yellowPlayerTypeLabel.setText("Computer");

		undoButton.setText("Undo");
		undoButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				undoButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
		leftPanel.setLayout(leftPanelLayout);
		leftPanelLayout.setHorizontalGroup(
				leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(leftPanelLayout.createSequentialGroup()
						.addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, Short.MAX_VALUE))
				.addGroup(leftPanelLayout.createSequentialGroup()
						.addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(leftPanelLayout.createSequentialGroup()
										.addGap(6, 6, 6)
										.addComponent(statusUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addGroup(leftPanelLayout.createSequentialGroup()
										.addGap(2, 2, 2)
										.addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(boardSizeTitleLabel)
												.addComponent(sequenceTitleLabel)
												.addComponent(yellowPlayerTitle)
												.addComponent(redPlayerTitle)
												.addGroup(leftPanelLayout.createSequentialGroup()
														.addGap(6, 6, 6)
														.addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(yellowPlayerTypeLabel)
																.addComponent(boardSizeLabel)
																.addComponent(sequenceLabel)
																.addComponent(redPlayerTypeLabel)))
												.addComponent(statusTitleLabel)
												.addComponent(movesLabel))
										.addGap(0, 0, Short.MAX_VALUE)))
						.addContainerGap())
				.addGroup(leftPanelLayout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(undoButton)
								.addComponent(exitGameButton))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGroup(leftPanelLayout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(newGameButton)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);
		leftPanelLayout.setVerticalGroup(
				leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(leftPanelLayout.createSequentialGroup()
						.addComponent(newGameButton)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(boardSizeTitleLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(boardSizeLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(sequenceTitleLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(sequenceLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(redPlayerTitle)
						.addGap(5, 5, 5)
						.addComponent(redPlayerTypeLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(yellowPlayerTitle)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(yellowPlayerTypeLabel)
						.addGap(17, 17, 17)
						.addComponent(statusTitleLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(statusUpdateLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(movesLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(undoButton)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(exitGameButton)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);

		getContentPane().add(leftPanel, java.awt.BorderLayout.LINE_START);

		getContentPane().add(_boardPanel, java.awt.BorderLayout.CENTER);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	// Remove JDialog window when pressed
	private void newGameWindowCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameWindowCancelButtonActionPerformed
		// TODO add your handling code here:
		_boardData.unpause();
		newGameWindow.setVisible(false);
	}//GEN-LAST:event_newGameWindowCancelButtonActionPerformed

	// If information entered are valid, creates a new game those values
	@SuppressWarnings("static-access")
	private void newGameWindowConfirmComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameWindowConfirmComboActionPerformed
		// TODO add your handling code here:
		if ((int)newGameWindowSequenceCombo.getValue() > (int)newGameWindowBoardSizeCombo.getValue()) {
			JOptionPane error = new JOptionPane();
			error.showMessageDialog(newGameWindow, "Sequence value cannot be higher than Board Size.", "", error.WARNING_MESSAGE);
		}
		else {


			int column = (int)newGameWindowBoardSizeCombo.getValue();
			int row = (int)newGameWindowBoardSizeCombo.getValue();
			int sequence = (int)newGameWindowSequenceCombo.getValue();
			PlayerType red;
			PlayerType yellow;
			if (newGameWindowRedPlayerCombo.getSelectedItem().toString().equals("Human")) {
				red = PlayerType.HUMAN;
			}
			else {
				red = PlayerType.COMPUTER;
			}
			if (newGameWindowYellowPlayerCombo.getSelectedItem().toString().equals("Human")) {
				yellow = PlayerType.HUMAN;
			}
			else {
				yellow = PlayerType.COMPUTER;
			}
			// Safety measure to make sure blinking token treads are closed
			//_boardData.restorePreBlink();
			// Sets new game to true on old board so that old Computer Player threads closes
			_boardData.setNewGame();
			newGameWindow.setVisible(false);
			this.dispose();
			SwingUtilities.invokeLater(new Runnable() {
				@Override
				public void run() {
					MainGameGUI game = new MainGameGUI(column, row, sequence, red, yellow);
					game.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
					game.setResizable(true);
					game.pack();
					game.setLocationRelativeTo(null);
					game.setVisible(true);	
				}
			});
		}
	}//GEN-LAST:event_newGameWindowConfirmComboActionPerformed

	// Exits the game when this button is pressed
	private void exitGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitGameButtonActionPerformed
		// TODO add your handling code here:
		System.exit(0);
	}//GEN-LAST:event_exitGameButtonActionPerformed

	// Makes JDialog box appear with options to create a new game
	private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed
		// TODO add your handling code here:
		_boardData.pause();
		setGeneralData();
		newGameWindow.pack();
		newGameWindow.setLocationRelativeTo(this);
		newGameWindow.setVisible(true);
	}//GEN-LAST:event_newGameButtonActionPerformed

	private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
		// TODO add your handling code here:
		_boardData.undo();
	}//GEN-LAST:event_undoButtonActionPerformed

	// Initialize data box with attributes from the board
	private void setGeneralData() {
		if (_boardData.getRedPlayer() instanceof ComputerPlayer) {
			newGameWindowRedPlayerCombo.setSelectedIndex(1);
			redPlayerTypeLabel.setText("Computer");
		}
		else {
			newGameWindowRedPlayerCombo.setSelectedIndex(0);
			redPlayerTypeLabel.setText("Human");
		}
		if (_boardData.getYellowPlayer() instanceof ComputerPlayer) {
			newGameWindowYellowPlayerCombo.setSelectedIndex(1);
			yellowPlayerTypeLabel.setText("Computer");
		}
		else {
			newGameWindowYellowPlayerCombo.setSelectedIndex(0);
			yellowPlayerTypeLabel.setText("Human");
		}
		newGameWindowBoardSizeCombo.setValue(_boardData.getColumnSize());
		newGameWindowSequenceCombo.setValue(_boardData.getSequence());
		boardSizeLabel.setText(_boardData.getColumnSize() + " X " + _boardData.getRowSize());
		sequenceLabel.setText(""+ _boardData.getSequence());
	}

	// Update the JLabels with current changing status of the game.
	public void updateStatus() {
		if (_boardData.checkGameWon()) {
			if (_boardData.getTokenOfCurrentActivePlayer().equals(Token.RED)) {
				statusUpdateLabel.setText("Red Player wins!");
			}
			else {
				statusUpdateLabel.setText("Yellow Player wins!");
			}
		}
		else if (_boardData.checkGameDraw()) {
			statusUpdateLabel.setText("Draw game!");
		}
		else if (_boardData.getTokenOfCurrentActivePlayer().equals(Token.RED)) {
			statusUpdateLabel.setText("Red Player's Turn");
		}
		else {
			statusUpdateLabel.setText("Yellow Player's Turn");
		}
		movesLabel.setText("Moves: " + _boardData.getMovesTotal());
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel boardSizeLabel;
	private javax.swing.JLabel boardSizeTitleLabel;
	private javax.swing.JButton exitGameButton;
	private javax.swing.Box.Filler filler1;
	private javax.swing.JPanel leftPanel;
	private javax.swing.JLabel movesLabel;
	private javax.swing.JButton newGameButton;
	private javax.swing.JDialog newGameWindow;
	private javax.swing.JSpinner newGameWindowBoardSizeCombo;
	private javax.swing.JLabel newGameWindowBoardSizeLabel;
	private javax.swing.JButton newGameWindowCancelButton;
	private javax.swing.JButton newGameWindowConfirmCombo;
	private javax.swing.JComboBox<String> newGameWindowRedPlayerCombo;
	private javax.swing.JLabel newGameWindowRedPlayerLabel;
	private javax.swing.JSpinner newGameWindowSequenceCombo;
	private javax.swing.JLabel newGameWindowSequenceLabel;
	private javax.swing.JComboBox<String> newGameWindowYellowPlayerCombo;
	private javax.swing.JLabel newGameWindowYellowPlayerLabel;
	private javax.swing.JLabel redPlayerTitle;
	private javax.swing.JLabel redPlayerTypeLabel;
	private javax.swing.JLabel sequenceLabel;
	private javax.swing.JLabel sequenceTitleLabel;
	private javax.swing.JLabel statusTitleLabel;
	private javax.swing.JLabel statusUpdateLabel;
	private javax.swing.JButton undoButton;
	private javax.swing.JLabel yellowPlayerTitle;
	private javax.swing.JLabel yellowPlayerTypeLabel;
	// End of variables declaration//GEN-END:variables

	private BoardData _boardData;
	private BoardGUI _boardPanel;
}
